-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Cambiatus.Mutation exposing (..)

import Cambiatus.InputObject
import Cambiatus.Interface
import Cambiatus.Object
import Cambiatus.Scalar
import Cambiatus.ScalarCodecs
import Cambiatus.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias CompleteObjectiveRequiredArguments =
    { input : Cambiatus.InputObject.CompleteObjectiveInput }


{-| Complete an objective
-}
completeObjective :
    CompleteObjectiveRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.Objective
    -> SelectionSet (Maybe decodesTo) RootMutation
completeObjective requiredArgs object_ =
    Object.selectionForCompositeField "completeObjective" [ Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodeCompleteObjectiveInput ] object_ (identity >> Decode.nullable)


type alias DeleteAddressRequiredArguments =
    { input : Cambiatus.InputObject.KycAddressDeletionInput }


{-| A mutation to delete user's address data
-}
deleteAddress :
    DeleteAddressRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.DeleteKycAddress
    -> SelectionSet (Maybe decodesTo) RootMutation
deleteAddress requiredArgs object_ =
    Object.selectionForCompositeField "deleteAddress" [ Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodeKycAddressDeletionInput ] object_ (identity >> Decode.nullable)


type alias DeleteKycRequiredArguments =
    { input : Cambiatus.InputObject.KycAddressDeletionInput }


{-| A mutation to delete user's kyc data
-}
deleteKyc :
    DeleteKycRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.DeleteKycAddress
    -> SelectionSet (Maybe decodesTo) RootMutation
deleteKyc requiredArgs object_ =
    Object.selectionForCompositeField "deleteKyc" [ Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodeKycAddressDeletionInput ] object_ (identity >> Decode.nullable)


type alias ReadNotificationRequiredArguments =
    { input : Cambiatus.InputObject.ReadNotificationInput }


{-| Mark a notification history as read
-}
readNotification :
    ReadNotificationRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.NotificationHistory
    -> SelectionSet decodesTo RootMutation
readNotification requiredArgs object_ =
    Object.selectionForCompositeField "readNotification" [ Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodeReadNotificationInput ] object_ identity


type alias RegisterPushRequiredArguments =
    { input : Cambiatus.InputObject.PushSubscriptionInput }


{-| Register an push subscription on Cambiatus
-}
registerPush :
    RegisterPushRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.PushSubscription
    -> SelectionSet decodesTo RootMutation
registerPush requiredArgs object_ =
    Object.selectionForCompositeField "registerPush" [ Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodePushSubscriptionInput ] object_ identity


type alias SignUpRequiredArguments =
    { input : Cambiatus.InputObject.SignUpInput }


{-| Creates a new user account
-}
signUp :
    SignUpRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.SignUp
    -> SelectionSet decodesTo RootMutation
signUp requiredArgs object_ =
    Object.selectionForCompositeField "signUp" [ Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodeSignUpInput ] object_ identity


type alias SignUpJuridicalRequiredArguments =
    { address : Cambiatus.InputObject.AddressUpdateInput
    , input : Cambiatus.InputObject.SignUpInput
    , kyc : Cambiatus.InputObject.KycDataUpdateInput
    }


{-| Creates a new juridical user account with KYC and Address
-}
signUpJuridical :
    SignUpJuridicalRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.SignUp
    -> SelectionSet decodesTo RootMutation
signUpJuridical requiredArgs object_ =
    Object.selectionForCompositeField "signUpJuridical" [ Argument.required "address" requiredArgs.address Cambiatus.InputObject.encodeAddressUpdateInput, Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodeSignUpInput, Argument.required "kyc" requiredArgs.kyc Cambiatus.InputObject.encodeKycDataUpdateInput ] object_ identity


type alias SignUpNaturalRequiredArguments =
    { input : Cambiatus.InputObject.SignUpInput
    , kyc : Cambiatus.InputObject.KycDataUpdateInput
    }


{-| Creates a new natural user account with KYC
-}
signUpNatural :
    SignUpNaturalRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.SignUp
    -> SelectionSet decodesTo RootMutation
signUpNatural requiredArgs object_ =
    Object.selectionForCompositeField "signUpNatural" [ Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodeSignUpInput, Argument.required "kyc" requiredArgs.kyc Cambiatus.InputObject.encodeKycDataUpdateInput ] object_ identity


type alias UpdateProfileRequiredArguments =
    { input : Cambiatus.InputObject.ProfileUpdateInput }


{-| A mutation to update a user's profile
-}
updateProfile :
    UpdateProfileRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.Profile
    -> SelectionSet (Maybe decodesTo) RootMutation
updateProfile requiredArgs object_ =
    Object.selectionForCompositeField "updateProfile" [ Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodeProfileUpdateInput ] object_ (identity >> Decode.nullable)


type alias UpsertAddressRequiredArguments =
    { input : Cambiatus.InputObject.AddressUpdateInput }


{-| Updates user's address if it already exists or inserts a new one if user hasn't it yet.
-}
upsertAddress :
    UpsertAddressRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.Address
    -> SelectionSet (Maybe decodesTo) RootMutation
upsertAddress requiredArgs object_ =
    Object.selectionForCompositeField "upsertAddress" [ Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodeAddressUpdateInput ] object_ (identity >> Decode.nullable)


type alias UpsertKycRequiredArguments =
    { input : Cambiatus.InputObject.KycDataUpdateInput }


{-| Updates user's KYC info if it already exists or inserts a new one if user hasn't it yet.
-}
upsertKyc :
    UpsertKycRequiredArguments
    -> SelectionSet decodesTo Cambiatus.Object.KycData
    -> SelectionSet (Maybe decodesTo) RootMutation
upsertKyc requiredArgs object_ =
    Object.selectionForCompositeField "upsertKyc" [ Argument.required "input" requiredArgs.input Cambiatus.InputObject.encodeKycDataUpdateInput ] object_ (identity >> Decode.nullable)
